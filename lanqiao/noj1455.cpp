//
// Created by Pygmalion on 2021/12/24.
//
#include<iostream>
#include<cstring>
using namespace std;
char g[40][60]={
        "01010101001011001001010110010110100100001000101010",
        "00001000100000101010010000100000001001100110100101",
        "01111011010010001000001101001011100011000000010000",
        "01000000001010100011010000101000001010101011001011",
        "00011111000000101000010010100010100000101100000000",
        "11001000110101000010101100011010011010101011110111",
        "00011011010101001001001010000001000101001110000000",
        "10100000101000100110101010111110011000010000111010",
        "00111000001010100001100010000001000101001100001001",
        "11000110100001110010001001010101010101010001101000",
        "00010000100100000101001010101110100010101010000101",
        "11100100101001001000010000010101010100100100010100",
        "00000010000000101011001111010001100000101010100011",
        "10101010011100001000011000010110011110110100001000",
        "10101010100001101010100101000010100000111011101001",
        "10000000101100010000101100101101001011100000000100",
        "10101001000000010100100001000100000100011110101001",
        "00101001010101101001010100011010101101110000110101",
        "11001010000100001100000010100101000001000111000010",
        "00001000110000110101101000000100101001001000011101",
        "10100101000101000000001110110010110101101010100001",
        "00101000010000110101010000100010001001000100010101",
        "10100001000110010001000010101001010101011111010010",
        "00000100101000000110010100101001000001000000000010",
        "11010000001001110111001001000011101001011011101000",
        "00000110100010001000100000001000011101000000110011",
        "10101000101000100010001111100010101001010000001000",
        "10000010100101001010110000000100101010001011101000",
        "00111100001000010000000110111000000001000000001011",
        "10000001100111010111010001000110111010101101111000"

};
  int n=30,m=50;
/*
char g[40][60]={
        "010000",
        "000100",
        "001001",
        "110000"
};
int n=4,m=6;
*/
typedef pair<int,int > PII;
const int N=100;
PII q[N*N];
int d[4][2]={{1,0},{0,-1},{0,1},{-1,0}};//D,L,R,U
char di[4]={'D','L','R','U'};
PII  way[N][N];
void bfs(int sx,int sy){
    memset(way,-1,sizeof way);
    int hh=0,tt=0;
    q[hh]={sx,sy};
    while(hh<=tt){
        PII t=q[hh++];
        for(int i=0;i<4;i++){
            int a=t.first+d[i][0],b=t.second+d[i][1];
            if(a<0||a>=n||b<0||b>=m) continue;
            if(g[a][b]=='1') continue;
            if(way[a][b].first!=-1) continue;
            way[a][b]=t;
            q[++tt]={a,b};
        }
    }

}
int main(){
    bfs(n-1,m-1);
    PII t={0,0};
    while(true) {
        int a=way[t.first][t.second].first-t.first,b=way[t.first][t.second].second-t.second;
        for(int i=0;i<4;i++){
            if(d[i][0]==a&&d[i][1]==b){
                cout<<di[i];
            }
        }
        if(way[t.first][t.second].first==n-1&&way[t.first][t.second].second==m-1) break;
        else
            t=way[t.first][t.second];
    }

}
